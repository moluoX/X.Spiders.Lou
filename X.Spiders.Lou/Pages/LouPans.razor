@page "/LouPans"

<PageTitle>LouPans</PageTitle>

@using Microsoft.EntityFrameworkCore
@using X.Spiders.Lou.Data
@using X.Spiders.Lou.Data.Models
@using X.Spiders.Lou.Domain.Spiders
@inject SpiderDbContext Db

<h3>LouPans</h3>

@if (models == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>NewName</th>
                <th>LouDong</th>
                <th>TaoFangs</th>
                <th>SaledCount</th>
                <th>SalingCount</th>
                <th>SaledRate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var model in models)
            {
                <tr>
                    <td>@model.Name</td>
                    <td>@model.NewName</td>
                    <td>@model.DongNo</td>
                    <td>@model.TaoFangCount</td>
                    <td>@model.SaledCount</td>
                    <td>@model.SalingCount</td>
                    <td>@(model.TaoFangCount==0?"-":((decimal)model.SaledCount/model.TaoFangCount).ToString("#0.00%"))</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    dynamic models = null;

    protected override async Task OnInitializedAsync()
    {
        models = await (from x in Db.LouDongs
                        where x.LouPan != null && !x.LouPan.IsDeleted
                        orderby x.LouPan.Id, x.Id
                        select new
                        {
                            x.LouPan.Name,
                            x.LouPan.NewName,
                            x.DongNo,
                            TaoFangCount = x.TaoFangs.Count(y => y.Usage.Contains("住宅")),
                            SaledCount = x.TaoFangs.Count(y => y.Usage.Contains("住宅") && y.SaleStatus == "已售"),
                            SalingCount = x.TaoFangs.Count(y => y.Usage.Contains("住宅") && y.SaleStatus == "可售"),
                        }).ToListAsync();
    }
}
