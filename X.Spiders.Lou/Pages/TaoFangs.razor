@page "/TaoFangs"

<PageTitle>TaoFangs</PageTitle>

@using Microsoft.EntityFrameworkCore
@using X.Spiders.Lou.Data
@using X.Spiders.Lou.Data.Models
@using X.Spiders.Lou.Domain.Spiders
@inject SpiderDbContext Db

<h3>TaoFangs</h3>

@if (louPanNames == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <select @onchange="ListLouDongs">
            <option value="">--请选择--</option>
            @foreach (var louPanName in louPanNames)
            {
                <option value="@louPanName">@louPanName</option>
            }
        </select>
    </div>
    <div style="display:flex;">
        @if (louDongs != null && louDongs.Any())
        {
            @foreach (var louDong in louDongs)
            {
                <div style="margin:10px;text-align:center;">
                    <span class="badge bg-success">@louDong.DongNo (@louDong.FaZhengDate?.ToString("yyyy-MM-dd"))</span>
                    <table class="table" style="width:auto;margin:5px;">
                        <tbody>
                            @foreach (var taoFangGroup in louDong.TaoFangs.GroupBy(x => x.Floor).OrderByDescending(x => x.Key))
                            {
                                <tr>
                                    <td class="floornum">@taoFangGroup.Key</td>
                                    @foreach (var taoFang in taoFangGroup)
                                    {
                                        <td class="taofang @taoFang.CalCssClass()" style="background-color:@taoFang.CalColor();color:white;">
                                            @(taoFang.SaleStatusChangeTime.HasValue ? $"{taoFang.SaleStatusChangeTime.Value.ToString("MM-dd")}" : Math.Round(taoFang.BuildingArea ?? 0))
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                    <span class="badge bg-success">@louDong.DongNo (@louDong.FaZhengDate?.ToString("yyyy-MM-dd"))</span>
                </div>
            }
        }
    </div>
}

@code {
    IList<string>? louPanNames = null;
    IList<LouDong>? louDongs = null;

    protected override async Task OnInitializedAsync()
    {
        louPanNames = await (from x in Db.LouPans.AsNoTracking() select x.NewName).ToListAsync();
    }

    private async Task ListLouDongs(ChangeEventArgs e)
    {
        var louPanName = e.Value as string;
        if (string.IsNullOrWhiteSpace(louPanName))
            louDongs = null;
        else
            louDongs = await (from x in Db.LouDongs.Include(x => x.TaoFangs).AsNoTracking()
                              where x.LouPan.NewName == louPanName
                              orderby x.FaZhengDate, x.DongNo
                              select x).ToListAsync();
    }
}

